###################################
#####                         #####
#####     GENERAL SECTION     #####
#####                         #####
###################################
# (plugin metadatas)
[general]

# Notes about the name of the plugin:
# - the name of the plugin is given by the content of .layerapi2_label
#   in this directory (format: plugin_{name of the plugin}@mfserv)
# - the old "name" key in this file is not used anymore

# Version of the plugin (X.Y.Z)
# If the value is {{MFMODULE_VERSION}},
# the current module version is used
version=0.0.1

# Summary (one line) of the goal of the plugin
summary=one line summary

# License of the plugin
license=BSD

# URL of the plugin homepage
url=https://github.com/metwork-framework

# Name of the maintainer of the plugin on the form "Firstname FAMILYNAME <email>"
maintainer=Fabien MARTY <fabien.marty@meteo.fr>

# Vendor of the plugin
vendor=MetWork

# !!! ADVANCED SETTING !!!
# Use this only if you are sure about what you are doing
# extra nginx configuration filename inside your plugin directory
# null => no extra configuration
# The content will be included directly in "http" section
# If you want to include some configuration fragments specific to an app
# don't use this key (in [general] section] but extra_nginx_conf_filename
# in [app_xxxxx] section.
# Note: if you use this key, you can break the whole mfserv module
#       => so there will be a warning at plugin installation about that
# Note: the different between this key and the one just bellow is that
#       the configuration fragment will be inserted in "http" section
#       (for this one) and in "server" section (for the one above)
extra_nginx_http_conf_filename=null

# !!! ADVANCED SETTING !!!
# Use this only if you are sure about what you are doing
# extra nginx configuration filename inside your plugin directory
# null => no extra configuration
# The content will be included directly in "server" section
# If you want to include some configuration fragments specific to an app
# don't use this key (in [general] section] but extra_nginx_conf_filename
# in [app_xxxxx] section.
# Note: this key is not used with virtualdomain_based_routing
# Note: if you use this key, you can break the whole mfserv module
#       => so there will be a warning at plugin installation about that
# Note: the different between this key and the one just above is that
#       the configuration fragment will be inserted in "server" section
#       (for this one) and in "http" section (for the one above)
extra_nginx_server_conf_filename=null

# !!! ADVANCED SETTING !!!
# Use this only if you are sure about what you are doing
# extra nginx configuration filename inside your plugin directory
# null => no extra configuration
# The content will be included directly in "init_worker_by_lua_block" section
# and must be valid LUA code!
# Note: if you use this key, you can break the whole mfserv module
#       => so there will be a warning at plugin installation about that
extra_nginx_init_worker_by_lua_block_filename=null

# Private key to store the file format version
# => THERE IS NO GOOD REASON TO CHANGE THIS VALUE
# So, if you are about to change this value, DON'T DO THIS
__version=1

###############################
#####                     #####
#####     APP SECTION     #####
#####                     #####
###############################
# (Note: with this plugin type, you can't have several section like this one)
[app_main]

# Use prefix based routing:
# http://{host}:{port}/{plugin_name}/{app_name}/...
# (and/or)
# http://{host}:{port}/{plugin_name}/... if app_name == main or only one app in the plugin
prefix_based_routing=true

# Use virtualdomain based routing
# http://{app_name}.{plugin_name}.{host}:{port}/...
# (and/or)
# http://{plugin_name}.{host}:{port}/... if app_name == main or only one app in the plugin
# NOTE: you need a DNS "catch all" to do that (like a DNS CNAME *.{host} => {ip_of_the_host}
virtualdomain_based_routing=false

static_routing=true
static_url_prefix=
static_directory=

# !!! ADVANCED SETTING !!!
# Add extra routes to your plugin (starting by /, not ending by /, separated by ;)
# Example: prefix_based_routing_extra_routes=/foo;/bar
# null => no extra routes
# / => all routes
# Note: if you use this key, you can break the whole mfserv module
#       and generate some conflicts with other plugins
#       => so there will be a warning at plugin installation about that
prefix_based_routing_extra_routes=null

# !!! ADVANCED SETTING !!!
# use this only if you are sure about what you are doing
# extra nginx configuration filename inside your plugin directory
# null => no extra configuration
# the content will be included directly in your app "location" section for
# the "static" routing part (see also extra_nginx_conf_filename key for
# the "dynamic" part)
# if you want to include some configuration fragments at a more general level
# don't use this key but the one in [general] section)
extra_nginx_conf_static_filename=nginx_extra.conf

# !!! ADVANCED SETTINGS !!!
# You can add extra daemons which will be launched within your plugin
# by providing configuration blocks [extra_daemon_*]
# You have to provide a command to daemonize (the command must run in
# foreground and not daemonize by itself)
# [extra_daemon_foo]
# cmd_and_args = /your/foreground/command command_arg1 command_arg2
# numprocesses=1
# graceful_timeout = 30
# rlimit_as = 1000000000
# rlimit_nofile = 1000
# rlimit_stack = 10000000
# rlimit_core = 100000
# rlimit_fsize = 100000000
# log_split_stdout_stderr=AUTO
# log_split_multiple_workers=AUTO

